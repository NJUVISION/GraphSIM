function [G_g,pointset2,center]=graphcreation(pc_ori,pc_fast,epsilon,i)
space=epsilon;
pc_fast_coordinate=pc_fast.Location;
pc_fast_color=single(pc_fast.Color);
pc_ori_coordinate=pc_ori.Location;
pc_ori_color=single(pc_ori.Color);
[r,l]=size(pc_fast_color);
[idx, dit] = knnsearch( pc_ori_coordinate, pc_fast_coordinate(i,:), 'k', 5*space^3,  'distance', 'euclidean');
     ori_nearst_sample_coordinates=pc_ori_coordinate(idx(1,:),:);
     ori_nearst_sample_color=pc_ori_color(idx(1,:),:);
     D=distanz(pc_fast_coordinate(i,:)',ori_nearst_sample_coordinates');
     D(D>epsilon) = 0;
     [indx,indy,dist]=find(D(1,:));
     pointset=[ori_nearst_sample_coordinates(indy,:),ori_nearst_sample_color(indy,:)];
     center=[pc_fast_coordinate(i,:),pc_fast_color(i,:)];
     pointset=unique([center;pointset],'rows');
     pointset_coor=pointset(:,1:3);
     pointset_color=pointset(:,4:6);
     %% pointset为在epsilon邻域内所有的点，使用knn的方法建立local graph，距离参考fast_resampling的方法
     N=size(pointset,1); 
     K=50;
     [idx, dist] = knnsearch( pointset_coor, pointset_coor( round( linspace(1,N, 100))  ,:), 'k', K,  'distance', 'euclidean');
     s=min(K,size(dist,2));
     radius = max( dist(:, s) );
     param.type = 'radius';
     param.epsilon=radius;
     Dd=distanz(pc_fast_coordinate(i,:)',pointset_coor');
     Dd(Dd>radius) = 0;
     [indxx,indyy,distt]=find(Dd(1,:));
     pointset2=[pointset_coor(indyy,:),pointset_color(indyy,:)];
     pointset2=unique([center;pointset2],'rows');  
     G_g= gsp_nn_graph(pointset2(:,1:3), param); 